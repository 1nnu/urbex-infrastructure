apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.database.backup.jobName }}
spec:
  schedule: {{ .Values.database.backup.schedule }} # Every day at 2 AM
  jobTemplate:
    spec:
      containers:
      - name: {{ .Values.database.backup.jobName }}
        image: {{ .Values.database.image.repository}}:{{ .Values.database.image.tag }}
        command: ["/bin/bash", "-c"]
        args:
          - mkdir -p /backup;
            # Ensure the database is running and accessible
            until pg_isready -h {{ .Values.database.service.name }} -U {{ .Values.database.env.POSTGRES_USER }}; do
              echo "Waiting for PostgreSQL to be ready...";
              sleep 5;
            done;
            # Perform the backup
            echo "Backing up PostgreSQL database...";
            # Use pg_dump to create a backup of the database
          - pg_dump -h {{ .Values.database.service.name }} -U {{ .Values.database.env.POSTGRES_USER }} {{ .Values.database.env.POSTGRES_DB }} > /backup/backup.sql;
            # Upload somewhere, e.g., aws s3 cp /backup/backup.sql s3://your-bucket/
        env:
        - name: PGPASSWORD
          value: {{ .Values.database.env.POSTGRES_PASSWORD }}
        volumeMounts:
      restartPolicy: Never
  backoffLimit: 2