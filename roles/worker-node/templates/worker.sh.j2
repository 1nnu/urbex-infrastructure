#!/bin/bash
# set -e

# Set hostname
# echo "-------------Setting hostname-------------"
# hostnamectl set-hostname $1

# Disable swap
echo "-------------Disabling swap-------------"
swapoff -a
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Install Containerd
echo "-------------Installing Containerd-------------"
wget {{ containerd_github_url }}
tar Cxzvf /usr/local {{ containerd_tar_file }}
wget {{ containerd_service_url }}
mkdir -p /usr/local/lib/systemd/system
mv containerd.service /usr/local/lib/systemd/system/containerd.service
systemctl daemon-reload
systemctl enable --now containerd

# Install Runc
echo "-------------Installing Runc-------------"
wget {{ runc_github_url }}
install -m 755 {{ runc_file }} /usr/local/sbin/runc

# Install CNI
echo "-------------Installing CNI-------------"
wget {{ cni_github_url }}
mkdir -p /opt/cni/bin
tar Cxzvf /opt/cni/bin {{ cni_file }}

# Install CRICTL
echo "-------------Installing CRICTL-------------"
wget {{ crictl_github_url }}
tar zxvf {{ crictl_file }} -C /usr/local/bin
rm -f {{ crictl_file }}

cat <<EOF | sudo tee /etc/crictl.yaml
runtime-endpoint: unix:///run/containerd/containerd.sock
image-endpoint: unix:///run/containerd/containerd.sock
timeout: 2
debug: false
pull-image-on-create: false
EOF

# Forwarding IPv4 and letting iptables see bridged traffic
echo "-------------Setting IPTables-------------"
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter

EOF
modprobe overlay
modprobe br_netfilter
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF

sysctl --system
sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
modprobe br_netfilter
sysctl -p /etc/sysctl.conf

# Install kubectl, kubelet and kubeadm
echo "-------------Installing Kubectl, Kubelet and Kubeadm-------------"
apt-get update
apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL {{ kubernetes_gpg_key }} | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

apt update -y
apt install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl

echo "-------------Printing Kubeadm version-------------"
kubeadm version